---
- name: create temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: tempdir

- name: download prestashop installer
  unarchive:
    src: "{{ prestashop_download_url }}"
    dest: "{{ tempdir.path }}"
    remote_src: true

- name: decompress prestashop installer
  unarchive:
    src: "{{ tempdir.path }}/{{ prestashop_install_archive }}"
    dest: "{{ tempdir.path }}"
    remote_src: true

- name: create prestashop root directory
  file:
    path: "{{ prestashop_root_path }}"
    owner: "{{ prestashop_user }}"
    group: "{{ prestashop_group }}"
    mode: "{{ prestashop_chmod }}"
    state: directory

- name: copy pretashop files to www folder
  ansible.builtin.copy:
    remote_src: yes
    src: "{{ tempdir.path }}/"
    dest: "{{ prestashop_root_path }}/"
    owner: "{{ prestashop_user }}"
    group: "{{ prestashop_group }}"
    mode: "{{ prestashop_chmod }}"

# CLI install must be performed in the destination folder of Prestashop
# because some modules hardcode the current path during configuration.
- name: execute prestahop PHP installation script
  command: >
    php index_cli.php
    --language={{ prestashop_language }}
    --timezone={{ prestashop_timezone }}
    --domain={{ prestashop_domain }}
    --db_server={{ prestashop_db_server }}
    --db_user={{ prestashop_db_user }}
    --db_password={{ prestashop_db_password }}
    --db_name={{ prestashop_db_name }}
    --db_clear={{ prestashop_db_clear }}
    --db_create={{ prestashop_db_create }}
    --prefix={{ prestashop_prefix }}
    --engine={{ prestashop_engine }}
    --name={{ prestashop_name }}
    --activity={{ prestashop_activity }}
    --country={{ prestashop_country }}
    --firstname={{ prestashop_firstname }}
    --lastname={{ prestashop_lastname }}
    --password={{ prestashop_password }}
    --email={{ prestashop_email }}
    --license={{ prestashop_license }}
    --newsletter={{ prestashop_newsletter }}
    --send_email={{ prestashop_send_email }}
    --all_languages={{ prestashop_all_languages }}
    --ssl={{ prestashop_ssl }}
  args:
    chdir: "{{ prestashop_root_path }}/{{ prestashop_install_folder }}"
  register: result
  changed_when: "'Installation successful!' in result.stdout"

- name: delete prestashop install directory
  file:
    path: "{{ prestashop_root_path }}/{{ item }}"
    state: absent
  with_items:
    - "{{ prestashop_install_folder }}"
    - "{{ prestashop_install_archive }}"

- name: rename prestashop admin directory
  command: "mv {{ prestashop_root_path }}/{{ prestashop_default_admin_folder }} {{ prestashop_root_path }}/{{ prestashop_modified_admin_folder }}"
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc != 0

- name: create a file to track prestashop installation status
  copy:
    content: "{{ prestashop_version }}"
    dest: "{{ prestashop_root_path }}/{{ prestashop_check_file_name }}"
    owner: "{{ prestashop_user }}"
    group: "{{ prestashop_group }}"
    mode: "{{ prestashop_chmod }}"

- name: change global permissions on prestashop root directory
  ansible.builtin.file:
    path: "{{ prestashop_root_path }}"
    state: directory
    recurse: yes
    owner: "{{ prestashop_user }}"
    group: "{{ prestashop_group }}"
    mode: "{{ prestashop_chmod }}"

- name: delete temporary directory
  ansible.builtin.file:
    path: "{{ tempdir.path }}"
    state: absent
